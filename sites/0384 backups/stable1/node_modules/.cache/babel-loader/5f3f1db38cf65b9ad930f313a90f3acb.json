{"ast":null,"code":"var _jsxFileName = \"/root/0384full/src/pages/directions.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nexport default class Directions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/api/subjects').then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        posts: result\n      });\n    }, // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n    // чтобы не перехватывать исключения из ошибок в самих компонентах.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      posts\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 14\n        }\n      }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: 'fit-content',\n          margin: '0 auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page page-directions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, posts.map((res, index) => /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: `/subdirect`,\n          state: {\n            res\n          }\n        },\n        className: \"list-item\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, res.title))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/root/0384full/src/pages/directions.js"],"names":["React","Link","Directions","Component","constructor","props","state","error","isLoaded","posts","componentDidMount","fetch","then","res","json","result","setState","render","message","width","margin","map","index","pathname","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAEA,eAAe,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,eAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM;AAFK,OAAd;AAID,KARL,EASI;AACA;AACCR,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAhBL;AAkBD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAcA,KAAK,CAACW,OAApB,CAAP;AACD,KAFD,MAEO,IAAI,CAACV,QAAL,EAAe;AACpB,0BACE;AACE,QAAA,KAAK,EAAE;AACLW,UAAAA,KAAK,EAAE,aADF;AAELC,UAAAA,MAAM,EAAE;AAFH,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DADF;AASD,KAVM,MAUA;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGX,KAAK,CAACY,GAAN,CAAU,CAACR,GAAD,EAAMS,KAAN,kBACT,oBAAC,IAAD;AACE,QAAA,EAAE,EAAE;AACFC,UAAAA,QAAQ,EAAG,YADT;AAEFjB,UAAAA,KAAK,EAAE;AAAEO,YAAAA;AAAF;AAFL,SADN;AAKE,QAAA,SAAS,EAAC,WALZ;AAME,QAAA,GAAG,EAAES,KANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOT,GAAG,CAACW,KAAX,CAPF,CADD,CADH,CADF;AAeD;AACF;;AA/DqD","sourcesContent":["import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Directions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      posts: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('/api/subjects')\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            posts: result,\r\n          });\r\n        },\r\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        },\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, posts } = this.state;\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: 'fit-content',\r\n            margin: '0 auto',\r\n          }}>\r\n          Загрузка...\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"page page-directions\">\r\n          {posts.map((res, index) => (\r\n            <Link\r\n              to={{\r\n                pathname: `/subdirect`,\r\n                state: { res },\r\n              }}\r\n              className=\"list-item\"\r\n              key={index}>\r\n              <span>{res.title}</span>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}