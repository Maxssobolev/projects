{"ast":null,"code":"var _jsxFileName = \"/root/0384full/src/components/lecturerecords.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Collapse, Col } from 'react-bootstrap';\nimport clip from \"../assets/img/enlace.svg\";\nimport moment from 'moment';\nimport 'moment/locale/ru';\nexport default class LectureRecords extends React.Component {\n  constructor(props) {\n    super(props);\n    this.subject_id = this.props.subject_id;\n    this.state = {\n      open: false,\n      lectories: []\n    };\n  }\n\n  componentDidMount() {\n    const apiUrl = `/api/subjectlectories/?id=${this.subject_id}`;\n    axios.get(apiUrl).then(resp => {\n      if (resp.data.length > 0) {\n        this.setState({\n          lectories: resp.data\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-subdirect__lectorBlock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, this.state.lectories.length > 0 && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.setState({\n        open: !this.state.open\n      }),\n      \"aria-controls\": \"collapsed-block2\",\n      \"aria-expanded\": this.state.open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"\\u041C\\u0430\\u0442\\u0435\\u0440\\u0438\\u0430\\u043B\\u044B \\u043B\\u0435\\u043A\\u0446\\u0438\\u0439\"), /*#__PURE__*/React.createElement(Collapse, {\n      in: this.state.open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"collapsed-block2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, this.state.lectories.map((res, index) => {\n      console.log(moment(res.date));\n\n      if (res.type === 'youtube') {\n        //В Бд нужно только ID видео на youtube\n        return /*#__PURE__*/React.createElement(Col, {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"lec_title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 23\n          }\n        }, res.title), /*#__PURE__*/React.createElement(\"iframe\", {\n          width: 250,\n          src: `https://www.youtube.com/embed/${res.content}`,\n          frameborder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"info-block__date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 23\n          }\n        }, moment(res.date).locale('ru').format('ll')));\n      } else if (res.type === 'onserver') {\n        return /*#__PURE__*/React.createElement(Col, {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"lec_title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 23\n          }\n        }, res.title), /*#__PURE__*/React.createElement(\"video\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"source\", {\n          src: res.content,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"info-block__date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 23\n          }\n        }, moment(res.date).locale('ru').format('ll')));\n      } else if (res.type === 'link') {\n        return /*#__PURE__*/React.createElement(Col, {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"lec_title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 23\n          }\n        }, res.title), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: res.content,\n          target: \"_blank\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: clip,\n          width: \"20\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 27\n          }\n        }), \" \\u0414\\u043E\\u0441\\u0442\\u0443\\u043F \\u043F\\u043E \\u0441\\u0441\\u044B\\u043B\\u043A\\u0435\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"info-block__date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 23\n          }\n        }, moment(res.date).locale('ru').format('ll')));\n      } else if (res.type === 'frame') {\n        //В Бд нужно только путь из src фрейма вставить\n        return /*#__PURE__*/React.createElement(Col, {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"lec_title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 23\n          }\n        }, res.title), /*#__PURE__*/React.createElement(\"iframe\", {\n          width: window.innerHeight / 2.5,\n          src: res.content,\n          allowFullScreen: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"info-block__date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 23\n          }\n        }, moment(res.date).locale('ru').format('ll')));\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/root/0384full/src/components/lecturerecords.js"],"names":["React","axios","Collapse","Col","moment","LectureRecords","Component","constructor","props","subject_id","state","open","lectories","componentDidMount","apiUrl","get","then","resp","data","length","setState","render","map","res","index","console","log","date","type","title","content","locale","format","clip","window","innerHeight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Collapse, Col } from 'react-bootstrap';\r\n\r\nimport clip from '../assets/img/enlace.svg';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nexport default class LectureRecords extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.subject_id = this.props.subject_id;\r\n\r\n    this.state = {\r\n      open: false,\r\n      lectories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const apiUrl = `/api/subjectlectories/?id=${this.subject_id}`;\r\n    axios.get(apiUrl).then((resp) => {\r\n      if (resp.data.length > 0) {\r\n        this.setState({\r\n          lectories: resp.data,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"page-subdirect__lectorBlock\">\r\n        {this.state.lectories.length > 0 && (\r\n          <button\r\n            onClick={() => this.setState({ open: !this.state.open })}\r\n            aria-controls=\"collapsed-block2\"\r\n            aria-expanded={this.state.open}>\r\n            Материалы лекций\r\n          </button>\r\n        )}\r\n\r\n        <Collapse in={this.state.open}>\r\n          <div id=\"collapsed-block2\">\r\n            <div className=\"wrapper\">\r\n              {this.state.lectories.map((res, index) => {\r\n                console.log(moment(res.date));\r\n                if (res.type === 'youtube') {\r\n                  //В Бд нужно только ID видео на youtube\r\n\r\n                  return (\r\n                    <Col key={index}>\r\n                      <div className=\"lec_title\">{res.title}</div>\r\n                      <iframe\r\n                        width={250}\r\n                        src={`https://www.youtube.com/embed/${res.content}`}\r\n                        frameborder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowFullScreen={true}></iframe>\r\n                      <div className=\"info-block__date\">\r\n                        {moment(res.date).locale('ru').format('ll')}\r\n                      </div>\r\n                    </Col>\r\n                  );\r\n                } else if (res.type === 'onserver') {\r\n                  return (\r\n                    <Col key={index}>\r\n                      <div className=\"lec_title\">{res.title}</div>\r\n                      <video>\r\n                        <source src={res.content} />\r\n                      </video>\r\n                      <div className=\"info-block__date\">\r\n                        {moment(res.date).locale('ru').format('ll')}\r\n                      </div>\r\n                    </Col>\r\n                  );\r\n                } else if (res.type === 'link') {\r\n                  return (\r\n                    <Col key={index}>\r\n                      <div className=\"lec_title\">{res.title}</div>\r\n                      <div>\r\n                        <a href={res.content} target=\"_blank\">\r\n                          <img src={clip} width=\"20\" /> Доступ по ссылке\r\n                        </a>\r\n                      </div>\r\n                      <div className=\"info-block__date\">\r\n                        {moment(res.date).locale('ru').format('ll')}\r\n                      </div>\r\n                    </Col>\r\n                  );\r\n                } else if (res.type === 'frame') {\r\n                  //В Бд нужно только путь из src фрейма вставить\r\n                  return (\r\n                    <Col key={index}>\r\n                      <div className=\"lec_title\">{res.title}</div>\r\n                      <iframe\r\n                        width={window.innerHeight / 2.5}\r\n                        src={res.content}\r\n                        allowFullScreen={true}></iframe>\r\n                      <div className=\"info-block__date\">\r\n                        {moment(res.date).locale('ru').format('ll')}\r\n                      </div>\r\n                    </Col>\r\n                  );\r\n                }\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}