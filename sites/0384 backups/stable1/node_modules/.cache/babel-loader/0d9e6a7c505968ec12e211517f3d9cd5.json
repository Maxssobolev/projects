{"ast":null,"code":"var _jsxFileName = \"/root/0384full/src/components/lecturerecords.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Collapse, Col } from 'react-bootstrap';\nimport clip from \"../assets/img/enlace.svg\";\nimport moment from 'moment';\nimport 'moment/locale/ru';\nexport default class LectureRecords extends React.Component {\n  constructor(props) {\n    super(props);\n    this.subject_id = this.props.subject_id;\n    this.state = {\n      lectories: []\n    };\n  }\n\n  componentDidMount() {\n    const apiUrl = `/api/subjectlectories/?id=${this.subject_id}`;\n    axios.get(apiUrl).then(resp => {\n      if (resp.data.length > 0) {\n        this.setState({\n          lectories: resp.data\n        });\n      }\n    });\n  }\n\n  render() {\n    if (lectories) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-subdirect__lectorBlock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"collapsed-block2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, this.state.lectories.map((res, index) => {\n        if (res.type === 'youtube') {\n          //В Бд нужно только ID видео на youtube\n          return /*#__PURE__*/React.createElement(Col, {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"lec_title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 23\n            }\n          }, res.title), /*#__PURE__*/React.createElement(\"iframe\", {\n            width: 250,\n            src: `https://www.youtube.com/embed/${res.content}`,\n            frameborder: \"0\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 23\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"info-block__date\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 23\n            }\n          }, moment(res.date).locale('ru').format('ll')));\n        } else if (res.type === 'onserver') {\n          return /*#__PURE__*/React.createElement(Col, {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"lec_title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 23\n            }\n          }, res.title), /*#__PURE__*/React.createElement(\"video\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"source\", {\n            src: res.content,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"info-block__date\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 23\n            }\n          }, moment(res.date).locale('ru').format('ll')));\n        } else if (res.type === 'link') {\n          return /*#__PURE__*/React.createElement(Col, {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"lec_title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 23\n            }\n          }, res.title), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            href: res.content,\n            target: \"_blank\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: clip,\n            width: \"20\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 27\n            }\n          }), \" \\u0414\\u043E\\u0441\\u0442\\u0443\\u043F \\u043F\\u043E \\u0441\\u0441\\u044B\\u043B\\u043A\\u0435\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"info-block__date\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 23\n            }\n          }, moment(res.date).locale('ru').format('ll')));\n        } else if (res.type === 'frame') {\n          //В Бд нужно только путь из src фрейма вставить\n          return /*#__PURE__*/React.createElement(Col, {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"lec_title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 23\n            }\n          }, res.title), /*#__PURE__*/React.createElement(\"iframe\", {\n            width: window.innerHeight / 2.5,\n            src: res.content,\n            allowFullScreen: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 23\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"info-block__date\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 23\n            }\n          }, moment(res.date).locale('ru').format('ll')));\n        }\n      }))));\n    } else {\n      return 'none';\n    }\n  }\n\n}","map":{"version":3,"sources":["/root/0384full/src/components/lecturerecords.js"],"names":["React","axios","Collapse","Col","moment","LectureRecords","Component","constructor","props","subject_id","state","lectories","componentDidMount","apiUrl","get","then","resp","data","length","setState","render","map","res","index","type","title","content","date","locale","format","clip","window","innerHeight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Collapse, Col } from 'react-bootstrap';\r\n\r\nimport clip from '../assets/img/enlace.svg';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nexport default class LectureRecords extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.subject_id = this.props.subject_id;\r\n\r\n    this.state = {\r\n      lectories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const apiUrl = `/api/subjectlectories/?id=${this.subject_id}`;\r\n    axios.get(apiUrl).then((resp) => {\r\n      if (resp.data.length > 0) {\r\n        this.setState({\r\n          lectories: resp.data,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (lectories) {\r\n      return (\r\n        <div className=\"page-subdirect__lectorBlock\">\r\n          <div id=\"collapsed-block2\">\r\n            <div className=\"wrapper\">\r\n              {this.state.lectories.map((res, index) => {\r\n                if (res.type === 'youtube') {\r\n                  //В Бд нужно только ID видео на youtube\r\n                  return (\r\n                    <Col key={index}>\r\n                      <div className=\"lec_title\">{res.title}</div>\r\n                      <iframe\r\n                        width={250}\r\n                        src={`https://www.youtube.com/embed/${res.content}`}\r\n                        frameborder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowFullScreen={true}></iframe>\r\n                      <div className=\"info-block__date\">\r\n                        {moment(res.date).locale('ru').format('ll')}\r\n                      </div>\r\n                    </Col>\r\n                  );\r\n                } else if (res.type === 'onserver') {\r\n                  return (\r\n                    <Col key={index}>\r\n                      <div className=\"lec_title\">{res.title}</div>\r\n                      <video>\r\n                        <source src={res.content} />\r\n                      </video>\r\n                      <div className=\"info-block__date\">\r\n                        {moment(res.date).locale('ru').format('ll')}\r\n                      </div>\r\n                    </Col>\r\n                  );\r\n                } else if (res.type === 'link') {\r\n                  return (\r\n                    <Col key={index}>\r\n                      <div className=\"lec_title\">{res.title}</div>\r\n                      <div>\r\n                        <a href={res.content} target=\"_blank\">\r\n                          <img src={clip} width=\"20\" /> Доступ по ссылке\r\n                        </a>\r\n                      </div>\r\n                      <div className=\"info-block__date\">\r\n                        {moment(res.date).locale('ru').format('ll')}\r\n                      </div>\r\n                    </Col>\r\n                  );\r\n                } else if (res.type === 'frame') {\r\n                  //В Бд нужно только путь из src фрейма вставить\r\n                  return (\r\n                    <Col key={index}>\r\n                      <div className=\"lec_title\">{res.title}</div>\r\n                      <iframe\r\n                        width={window.innerHeight / 2.5}\r\n                        src={res.content}\r\n                        allowFullScreen={true}></iframe>\r\n                      <div className=\"info-block__date\">\r\n                        {moment(res.date).locale('ru').format('ll')}\r\n                      </div>\r\n                    </Col>\r\n                  );\r\n                }\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return 'none';\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}