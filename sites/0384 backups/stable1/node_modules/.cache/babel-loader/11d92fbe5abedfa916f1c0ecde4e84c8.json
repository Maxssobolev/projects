{"ast":null,"code":"var _jsxFileName = \"/root/0384full/src/pages/home.js\";\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Markup } from 'interweave';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport 'moment/locale/ru';\nimport alertSound from '../assets/sounds/alert.mp3';\nimport fileImg from \"../assets/img/file.svg\";\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.audio = new Audio(alertSound);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      posts: [],\n      postLastId: '',\n      toChange: ''\n    };\n  }\n  /*\r\n  componentDidUpdate() {\r\n    fetch('/api/home')\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          if (result[0].id != this.state.postLastId) {\r\n            document.title = 'NEW|#0384';\r\n            this.setState({\r\n              postLastId: result[0].id,\r\n              isLoaded: true,\r\n              posts: result,\r\n              toChange: {\r\n                id: result[0].id,\r\n              },\r\n            });\r\n          } else {\r\n            this.setState({\r\n              isLoaded: true,\r\n              posts: result,\r\n            });\r\n          }\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        },\r\n      );\r\n    if (document.title == 'NEW|#0384') {\r\n      this.audio.play();\r\n      setTimeout(() => {\r\n        this.audio.pause();\r\n        document.title = '#0384';\r\n      }, 1350);\r\n    }\r\n  }*/\n\n\n  componentDidMount() {\n    fetch('/api/home').then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        posts: result,\n        postLastId: result[0].id\n      });\n    }, // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n    // чтобы не перехватывать исключения из ошибок в самих компонентах.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      posts\n    } = this.state;\n    const regex = /\\b(?:(?:ht|f)tp(?:s?)\\:\\/\\/|~\\/|\\/)?(?:\\w+:\\w+@)?((?:(?:[-\\w\\d{1-3}]+\\.)+(?:com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|edu|co\\.uk|ac\\.uk|it|fr|tv|museum|asia|local|travel|[a-z]{2}))|((\\b25[0-5]\\b|\\b[2][0-4][0-9]\\b|\\b[0-1]?[0-9]?[0-9]\\b)(\\.(\\b25[0-5]\\b|\\b[2][0-4][0-9]\\b|\\b[0-1]?[0-9]?[0-9]\\b)){3}))(?::[\\d]{1,5})?(?:(?:(?:\\/(?:[-\\w~!$+|.,=]|%[a-f\\d]{2})+)+|\\/)+|\\?|#)?(?:(?:\\?(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)(?:&(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)*)*(?:#(?:[-\\w~!$ |\\/.,*:;=]|%[a-f\\d]{2})*)?\\b/gi;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 14\n        }\n      }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: 'fit-content',\n          margin: '0 auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page page-home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, posts.map((res, index) => {\n        let stylemap = {};\n\n        if (this.state.toChange && this.state.toChange.id == res.id) {\n          stylemap = {\n            boxShadow: '0 0 14px 0px green',\n            transition: '.7s'\n          };\n        }\n\n        return /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/view`,\n            state: {\n              res\n            }\n          },\n          className: \"info-block\",\n          key: index,\n          style: stylemap,\n          onMouseOver: e => {\n            e.currentTarget.style.boxShadow = '1px 1px 3px grey';\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"info-block__title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 19\n          }\n        }, res.title), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"info-block__content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Markup, {\n          content: res.content.length > 300 ? res.content.replace(regex, match => {\n            return `<img src=${fileImg} width='50' />`;\n          }).substring(0, 300) + '...' : res.content.replace(regex, match => {\n            return `<img src=${fileImg} width='50' />`;\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"info-block__date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }\n        }, moment(res.date).locale('ru').format('lll')));\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/root/0384full/src/pages/home.js"],"names":["React","Container","Markup","Link","moment","alertSound","Home","Component","constructor","props","audio","Audio","state","error","isLoaded","posts","postLastId","toChange","componentDidMount","fetch","then","res","json","result","setState","id","render","regex","message","width","margin","map","index","stylemap","boxShadow","transition","pathname","e","currentTarget","style","title","content","length","replace","match","fileImg","substring","date","locale","format"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Markup } from 'interweave';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nimport alertSound from '../assets/sounds/alert.mp3';\r\nimport fileImg from '../assets/img/file.svg';\r\n\r\nexport default class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.audio = new Audio(alertSound);\r\n\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      posts: [],\r\n      postLastId: '',\r\n      toChange: '',\r\n    };\r\n  }\r\n  /*\r\n  componentDidUpdate() {\r\n    fetch('/api/home')\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          if (result[0].id != this.state.postLastId) {\r\n            document.title = 'NEW|#0384';\r\n            this.setState({\r\n              postLastId: result[0].id,\r\n              isLoaded: true,\r\n              posts: result,\r\n              toChange: {\r\n                id: result[0].id,\r\n              },\r\n            });\r\n          } else {\r\n            this.setState({\r\n              isLoaded: true,\r\n              posts: result,\r\n            });\r\n          }\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        },\r\n      );\r\n    if (document.title == 'NEW|#0384') {\r\n      this.audio.play();\r\n      setTimeout(() => {\r\n        this.audio.pause();\r\n        document.title = '#0384';\r\n      }, 1350);\r\n    }\r\n  }*/\r\n  componentDidMount() {\r\n    fetch('/api/home')\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            posts: result,\r\n            postLastId: result[0].id,\r\n          });\r\n        },\r\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        },\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, posts } = this.state;\r\n\r\n    const regex = /\\b(?:(?:ht|f)tp(?:s?)\\:\\/\\/|~\\/|\\/)?(?:\\w+:\\w+@)?((?:(?:[-\\w\\d{1-3}]+\\.)+(?:com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|edu|co\\.uk|ac\\.uk|it|fr|tv|museum|asia|local|travel|[a-z]{2}))|((\\b25[0-5]\\b|\\b[2][0-4][0-9]\\b|\\b[0-1]?[0-9]?[0-9]\\b)(\\.(\\b25[0-5]\\b|\\b[2][0-4][0-9]\\b|\\b[0-1]?[0-9]?[0-9]\\b)){3}))(?::[\\d]{1,5})?(?:(?:(?:\\/(?:[-\\w~!$+|.,=]|%[a-f\\d]{2})+)+|\\/)+|\\?|#)?(?:(?:\\?(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)(?:&(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)*)*(?:#(?:[-\\w~!$ |\\/.,*:;=]|%[a-f\\d]{2})*)?\\b/gi;\r\n\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: 'fit-content',\r\n            margin: '0 auto',\r\n          }}>\r\n          Загрузка...\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"page page-home\">\r\n          <Container>\r\n            {posts.map((res, index) => {\r\n              let stylemap = {};\r\n              if (this.state.toChange && this.state.toChange.id == res.id) {\r\n                stylemap = {\r\n                  boxShadow: '0 0 14px 0px green',\r\n                  transition: '.7s',\r\n                };\r\n              }\r\n\r\n              return (\r\n                <Link\r\n                  to={{\r\n                    pathname: `/view`,\r\n                    state: { res },\r\n                  }}\r\n                  className=\"info-block\"\r\n                  key={index}\r\n                  style={stylemap}\r\n                  onMouseOver={(e) => {\r\n                    e.currentTarget.style.boxShadow = '1px 1px 3px grey';\r\n                  }}>\r\n                  <span className=\"info-block__title\">{res.title}</span>\r\n                  <span className=\"info-block__content\">\r\n                    <Markup\r\n                      content={\r\n                        res.content.length > 300\r\n                          ? res.content\r\n                              .replace(regex, (match) => {\r\n                                return `<img src=${fileImg} width='50' />`;\r\n                              })\r\n                              .substring(0, 300) + '...'\r\n                          : res.content.replace(regex, (match) => {\r\n                              return `<img src=${fileImg} width='50' />`;\r\n                            })\r\n                      }\r\n                    />\r\n                  </span>\r\n                  <span className=\"info-block__date\">\r\n                    {moment(res.date).locale('ru').format('lll')}\r\n                  </span>\r\n                </Link>\r\n              );\r\n            })}\r\n          </Container>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}